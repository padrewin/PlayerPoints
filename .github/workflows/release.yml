name: Publish Release and Maven Package

on:
  push:
    branches:
      - master
    paths:
      - 'src/main/**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: false
        default: 'warning'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Build the project using Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  publish-release:
    runs-on: ubuntu-latest
    if: "contains(github.event.commits[0].message, '[release]')"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Build the project using Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Publish Release
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "Release ${{ github.ref }}"
        body: "Release description here."
        draft: false
        prerelease: false

  publish-maven-package:
    runs-on: ubuntu-latest
    if: "contains(github.event.commits[0].message, '[package]')"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Create settings.xml from the GitHub secret
    - name: Create settings.xml
      run: |
        cat <<EOF > $GITHUB_WORKSPACE/settings.xml
        ${{ secrets.PREMIUMPOINTS_PACKAGE }}
        EOF

    # Build the project using Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Deploy the package to GitHub Packages using Maven
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
