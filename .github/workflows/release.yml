name: Build and Publish Package

on:
  push:
    branches:
      - master
    paths:
      - 'src/main/**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: false
        default: 'warning'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Create settings.xml using COLDDEV_PACKAGE and PREMIUMPOINTS_PACKAGE secrets
      - name: Create settings.xml
        run: |
          echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">" > $GITHUB_WORKSPACE/settings.xml
          echo "  <servers>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    <server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <id>com.github.padrewin</id>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <username>padrewin</username>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <password>${{ secrets.PREMIUMPOINTS_PACKAGE }}</password>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    </server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    <server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <id>com.github.coldplugin</id>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <username>padrewin</username>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <password>${{ secrets.COLDDEV_PACKAGE }}</password>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    </server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "  </servers>" >> $GITHUB_WORKSPACE/settings.xml
          echo "</settings>" >> $GITHUB_WORKSPACE/settings.xml

      # Check settings.xml content for debugging purposes
      - name: Check settings.xml content
        run: cat $GITHUB_WORKSPACE/settings.xml

      # Build the project using Maven with the simple settings.xml
      - name: Build with Maven
        run: mvn -B deploy -s $GITHUB_WORKSPACE/settings.xml

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: "contains(github.event.commits[0].message, '[build]')"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Re-create settings.xml from the GitHub secrets for PremiumPoints and ColdDev
      - name: Create settings.xml
        run: |
          echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">" > $GITHUB_WORKSPACE/settings.xml
          echo "  <servers>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    <server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <id>com.github.padrewin</id>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <username>padrewin</username>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <password>${{ secrets.PREMIUMPOINTS_PACKAGE }}</password>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    </server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    <server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <id>com.github.coldplugin</id>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <username>padrewin</username>" >> $GITHUB_WORKSPACE/settings.xml
          echo "      <password>${{ secrets.COLDDEV_PACKAGE }}</password>" >> $GITHUB_WORKSPACE/settings.xml
          echo "    </server>" >> $GITHUB_WORKSPACE/settings.xml
          echo "  </servers>" >> $GITHUB_WORKSPACE/settings.xml
          echo "</settings>" >> $GITHUB_WORKSPACE/settings.xml

      # Deploy the package to GitHub Packages using Maven
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
